#Create VMs by json like this:
#------------
#simple example
# VMs
VMs = {
  TEST_VM = {
    image_name      = "ubuntu-20.04-server-cloudimg-amd64.img"
    flavor          = {
        vcpus = 2
        ram   = 2048
    }
    vm_qty          = 4
  }
}
AZs = {}
server_groups = {}
#------------
# exemple 1
# VMs
VMs = {
  TEST_DRS = {
#    image_name      = "ubuntu-20.04-server-cloudimg-amd64.img"
    image_name      = "cirros-0.6.2-x86_64-disk.img"
    az_hint         = "foo_az:ebochkov-ks-sber-comp-02"
    flavor          = {
        vcpus = 2
        ram   = 2048
    }
    vm_qty          = 3
  }
    TEST_DRS_2 = {
    image_name      = "ubuntu-20.04-server-cloudimg-amd64.img"
    flavor          = {
        vcpus = 2
        ram   = 2048
    }
    keypair_name = "key_test"
    vm_qty          = 3
    metadata = {
        foo         = "baz"
        test_meta   = "Created by Terraform VM_module"
    }
  }
}

# AZs
AZs = {
 foo = {
    az_name = "foo_az"
    hosts_list = [
      "ebochkov-keystack-comp-01",
      "ebochkov-keystack-comp-02",
    ]
  }
}

server_groups = {}
#------------
# exemple 2
# VMs
VMs = {
  vm_1 = {
    vm_qty          = 4
    image_name      = "ubuntu-20.04-server-cloudimg-amd64.img"
    az_hint         = "az_1:cdm-bl-pca04"
    disks           = [
      {
        boot_index = 1,
        size = 1
      },
      {
        boot_index = 2,
        size = 2
      },
      {
        boot_index = 3,
        size = 3
      },
    ]
  }
}

# AZs
AZs = {
  aggr_1 = {
    az_name = "az_1"
    hosts_list = [
      "cdm-bl-pca04",
      "ebochkov-ks-sber-comp-03",
    ]
  }
  aggr_2 = {
    az_name    = "az_2"
    hosts_list = [
      "ebochkov-ks-sber-comp-01",
      "ebochkov-ks-sber-comp-02",
      "ebochkov-ks-sber-comp-04",
      "cdm-bl-pca05",
    ]
  }
}
#------------
# exemple 3
# VMs
VMs = {
  TEST_VM = {
    image_name      = "cirros-0.6.2-x86_64-disk.img"
    flavor          = {
        vcpus = 2
        ram   = 2048
    }
    vm_qty          = 1
    disks = [
    {},
    {
        boot_index = 1
        size = 2
        delete_on_termination = true
      },
    {
        boot_index = 2
        size = 7
        delete_on_termination = false
      },
    ]
  }
}

# AZs
AZs = {
}

# Server groups
server_groups = {
}
#==================

#variable list:
#VM:
VMs = {
    <vm_name> = {
        vm_qty     = <vms_quantity>
        image_name = "<image_name>"
        flavor     = {
            vcpus       = <vCPUs>
            ram         = <RAM>     # !!! The value is specified in megabytes (MB; example: 4096 (4Gb))
            extra_specs = "<string>"
        }
        flavor_name                         = "<flavor_name>"
        keypair_name                        = "<keypair_name>"
        security_groups                     = [] #list
        az_hint                             = "<az_name>:<hyper_name>"
        network_name                        = "<network_name>"
        boot_volume_size                    = <size> (default_volume_size = 5)
        boot_volume_delete_on_termination   = "true\false" (default "true")
        disks           = [
          {
            boot_index = <boot_index>
            size = <size>
          },
        ]
        metadata = {}
        user_data =
            #or string:
                <<-EOT
                #cloud-config
                hostname: my-vm
                EOT
            #or template:
                { template_file = "templates/cloud-init-2.yaml" }
        }
    }
}

#AZ:
AZs = {
    <aggr_name> = {
        az_name    = "az_name" #(exp: "az_1")
        hosts_list = [ "<list_hosts>" ]
    }
}