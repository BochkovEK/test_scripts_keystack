#cloud-config
chpasswd:
  expire: false
  users:
    - name: ubuntu
      password: "$6$1RIJCwfWrd3WqaPd$sKcB5WNabsMQmCl3mu1JwJUsyrgNJdux5Ahj/6e1o79RRIyDwCjjEh44lqbo18T3lmOxfHuzlXpTwfvebO7S61"
      type: hash
ssh_pwauth: true

write_files:
  - path: /etc/systemd/resolved.conf
    content: |
      [Resolve]
      DNS=8.8.8.8 8.8.4.4 77.88.8.8
      FallbackDNS=1.1.1.1
      Domains=~.
  - path: /home/ubuntu/iperf_loop.sh
    content: |
      #!/bin/bash
      
      # To start:
      #   IPERF_SERVER="192.168.1.100:5201" nohup ./iperf_loop.sh >> /tmp/iperf_client.log 2>&1 &
      # To stop:
      #   kill $(cat /tmp/iperf_client.pid)

      # Configuration
      LOG_FILE="/tmp/iperf_client.log"
      TEST_DURATION=1
      PAUSE_BETWEEN_TESTS=1
      PID_FILE="/tmp/iperf_client.pid"
      DEFAULT_PORT="5201"
      
      # Initialize variables from arguments or environment
      parse_input() {
          local input=$1
          if [[ "$input" == *":"* ]]; then
              SERVER_IP="${input%%:*}"
              SERVER_PORT="${input#*:}"
          else
              SERVER_IP="$input"
              SERVER_PORT="$DEFAULT_PORT"
          fi
      }
      
      # Validate connection
      check_connection() {
          timeout 2 bash -c "cat < /dev/null > /dev/tcp/$SERVER_IP/$SERVER_PORT" 2>/dev/null
          if [ $? -ne 0 ]; then
              echo "ERROR: Cannot connect to $SERVER_IP:$SERVER_PORT" | tee -a "$LOG_FILE"
              echo "Available network interfaces:" | tee -a "$LOG_FILE"
              ip -o addr show | awk '{print $2": "$4}' | tee -a "$LOG_FILE"
              return 1
          fi
          return 0
      }
      
      # Main execution
      main() {
          # 1. Get server address
          if [ -n "$1" ]; then
              parse_input "$1"
          elif [ -n "$IPERF_SERVER" ]; then
              parse_input "$IPERF_SERVER"
          else
              echo "ERROR: No server specified!" | tee -a "$LOG_FILE"
              echo "Usage: $0 [IP:PORT] or set IPERF_SERVER env" | tee -a "$LOG_FILE"
              exit 1
          fi
      
          # 2. Validate input
          if [ -z "$SERVER_IP" ] || [ -z "$SERVER_PORT" ]; then
              echo "ERROR: Empty server address!" | tee -a "$LOG_FILE"
              exit 1
          fi
      
          # 3. Check connection
          if ! check_connection; then
              exit 1
          fi
      
          # 4. Main loop
          while true; do
              {
                  echo "=== $(date '+%Y-%m-%d %H:%M:%S') ==="
                  iperf3 -c "$SERVER_IP" -p "$SERVER_PORT" -t "$TEST_DURATION" --connect-timeout 5000
                  echo ""
              } | tee -a "$LOG_FILE"
              sleep "$PAUSE_BETWEEN_TESTS"
          done
      }
      
      # Startup procedure
      {
          echo "=== Startup $(date '+%Y-%m-%d %H:%M:%S') ==="
          echo "PID: $$"
          echo "Args: $@"
          echo "Env IPERF_SERVER: $IPERF_SERVER"
          
          # Create PID file
          echo $$ > "$PID_FILE"
          trap "rm -f '$PID_FILE'" EXIT
          
          main "$@"
      } >> "$LOG_FILE" 2>&1
    permissions: '0755'
    owner: ubuntu:ubuntu

runcmd:
  - echo "Custom cloud-init commands started executing..." >> /var/log/cloud-init-output.log
  - systemctl restart systemd-resolved
  - |
    for i in {1..6}; do
      apt-get update && apt-get install -y iperf3 && break || sleep 10
    done
