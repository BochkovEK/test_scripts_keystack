# to string for tf: https://dadroit.com/yaml-to-string/
# description:
# - change pass for ubuntu user by echo -n "1111" | openssl passwd -6 -stdin
# - add dns servers (google)
# - install fio, jq
# !!! Note:
#  - After creating the VM, cloud-init may still be executing the configured commands.
#  - check log:
#       tail -f /var/log/cloud-init-output.log
#  - cloud-init status -> status: done
#  - View disk_check logs if FAIL
#       journalctl -u disk_check.service -f --since "5 min ago"
#  - View disk_check logs if OK
#       tail -f /var/log/disk_check.log

# ----------------------- CUT TO PAST START -----------------------

#cloud-config
chpasswd:
  expire: false
  users:
    - name: ubuntu
      password: "$6$1RIJCwfWrd3WqaPd$sKcB5WNabsMQmCl3mu1JwJUsyrgNJdux5Ahj/6e1o79RRIyDwCjjEh44lqbo18T3lmOxfHuzlXpTwfvebO7S61"
      type: hash
ssh_pwauth: true

write_files:
  - path: /etc/systemd/resolved.conf
    content: |
      [Resolve]
      DNS=8.8.8.8 8.8.4.4 77.88.8.8 127.0.0.53
      FallbackDNS=1.1.1.1
      Domains=~.
  # 1. Create systemd service file
  - path: /etc/systemd/system/disk_check.service
    content: |
      [Unit]
      Description=Continuous disk health monitoring via fio
      After=network.target

      [Service]
      Type=simple
      ExecStart=/usr/local/bin/disk_check.sh
      Restart=always
      StandardOutput=syslog
      StandardError=syslog
      SyslogIdentifier=disk_check

      [Install]
      WantedBy=multi-user.target
    permissions: '0644'

  # 2. Create monitoring script
  - path: /usr/local/bin/disk_check.sh
    content: |
      #!/bin/bash

      # Configuration
      LOG_FILE="/var/log/disk_check.log"
      DISK="/dev/vda"
      TEST_DURATION="1s"
      CHECK_INTERVAL="10"

      while true; do
          TIMESTAMP=$(date +"%Y-%m-%d %T")
          
          if ! fio --name=healthcheck \
                   --filename=$DISK \
                   --rw=randread \
                   --bs=4k \
                   --runtime=$TEST_DURATION \
                   --time_based \
                   --direct=1 \
                   --output-format=json > /tmp/fio_last_test.json 2>&1; then
              echo "[$TIMESTAMP] ERROR: Disk $DISK failed!" >> $LOG_FILE
              logger -t disk_check "CRITICAL: Disk $DISK is unavailable!"
          else
              LATENCY=$(jq '.jobs[0].read.lat_ns.mean' /tmp/fio_last_test.json 2>/dev/null)
              echo "[$TIMESTAMP] OK: Disk $DISK latency: $LATENCY ns" >> $LOG_FILE
          fi
          
          sleep $CHECK_INTERVAL
      done
    permissions: '0755'
    owner: root:root

runcmd:
  - echo "Custom cloud-init commands started executing..." >> /var/log/cloud-init-output.log
  - systemctl restart systemd-resolved
  - |
    for i in {1..6}; do
      apt-get update && apt-get install -y fio jq iperf3 && break || sleep 10
    done
  - systemctl daemon-reload
  - systemctl start disk_check.service
  - systemctl enable disk_check.service
  - echo "------------------------------------\nServer listening on 5201\n------------------------------------" > /var/log/iperf3_port_1.log
  - iperf3 -s -p 5201 --daemon --logfile --debug /var/log/iperf3_port_1.log
  - echo "------------------------------------\nServer listening on 5203\n------------------------------------" > /var/log/iperf3_port_3.log
  - iperf3 -s -p 5203 --daemon --logfile --debug /var/log/iperf3_port_3.log
  - echo "Custom cloud initialization commands completed!" >> /var/log/cloud-init-output.log

# ----------------------- CUT TO PAST END -----------------------

#  - systemctl enable systemd-resolved
#  - ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf
